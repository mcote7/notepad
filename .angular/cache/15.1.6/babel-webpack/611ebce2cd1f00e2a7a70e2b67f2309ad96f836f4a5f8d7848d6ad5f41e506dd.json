{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"textBox\"];\nexport class AppComponent {\n  constructor() {\n    // only webkit, firefox would be 'SpeechRecognition' in window, can fix later ... or not ... \n    if ('webkitSpeechRecognition' in window) {\n      console.log(\"webkit speech in window!\");\n      this.speechRecognition = new webkitSpeechRecognition();\n      this.initSpeech();\n    } else if ('SpeechRecognition' in window) {\n      console.log(\"firefox speech in window!\");\n      this.speechRecognition = new SpeechRecognition();\n      this.initSpeech();\n    } else {\n      console.log(\"speech NOT in window...\");\n    }\n  }\n  initSpeech() {\n    console.log(\"init:\", this.speechRecognition);\n    this.speechRecognition.lang = 'en-US';\n    this.speechRecognition.continuous = true;\n    console.log(\"speech init:\", this.speechRecognition);\n    this.startRecognition();\n    // events \n    this.speechRecognition.onresult = e => {\n      console.log(\"results?\", e, e.results[e.results.length - 1][0].transcript);\n      this.textBox.nativeElement.innerHTML += e.results[e.results.length - 1][0].transcript;\n    };\n    this.speechRecognition.onerror = e => {\n      console.log(\"error?\", e);\n    };\n    this.speechRecognition.onend = e => {\n      console.log(\"ended?\", e);\n      this.startRecognition();\n    };\n    this.speechRecognition.onnomatch = e => {\n      console.log(\"no match?\", e);\n    };\n  }\n  startRecognition() {\n    this.speechRecognition.start();\n  }\n  stopRecognition() {\n    this.speechRecognition.stop();\n  }\n}\nAppComponent.…µfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.…µ…µviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.…µ…µqueryRefresh(_t = i0.…µ…µloadQuery()) && (ctx.textBox = _t.first);\n    }\n  },\n  decls: 5,\n  vars: 0,\n  consts: [[\"textBox\", \"\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.…µ…µelementStart(0, \"h1\");\n      i0.…µ…µtext(1, \"\\uD83D\\uDDE3\\uFE0F Talk to Text Notepad \\uD83D\\uDDD2\\uFE0F\");\n      i0.…µ…µelementEnd();\n      i0.…µ…µelementStart(2, \"p\", null, 0);\n      i0.…µ…µtext(4, \"New Note: \");\n      i0.…µ…µelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,YAAY;EAKrBC;IACI;IACA,IAAI,yBAAyB,IAAIC,MAAM,EAAE;MACrCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAEvC,IAAI,CAACC,iBAAiB,GAAG,IAAIC,uBAAuB,EAAE;MACtD,IAAI,CAACC,UAAU,EAAE;KAEpB,MAAM,IAAG,mBAAmB,IAAIL,MAAM,EAAE;MACrCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAExC,IAAI,CAACC,iBAAiB,GAAG,IAAIG,iBAAiB,EAAE;MAChD,IAAI,CAACD,UAAU,EAAE;KACpB,MAAM;MACHJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;;EAE9C;EAEAG,UAAU;IACNJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAC,IAAI,CAACC,iBAAiB,CAAC;IAE3C,IAAI,CAACA,iBAAiB,CAACI,IAAI,GAAG,OAAO;IACrC,IAAI,CAACJ,iBAAiB,CAACK,UAAU,GAAG,IAAI;IAExCP,OAAO,CAACC,GAAG,CAAC,cAAc,EAAC,IAAI,CAACC,iBAAiB,CAAC;IAElD,IAAI,CAACM,gBAAgB,EAAE;IAEvB;IACA,IAAI,CAACN,iBAAiB,CAACO,QAAQ,GAAIC,CAAK,IAAI;MACxCV,OAAO,CAACC,GAAG,CAAC,UAAU,EAAES,CAAC,EAAEA,CAAC,CAACC,OAAO,CAACD,CAAC,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC;MACzE,IAAI,CAACC,OAAO,CAACC,aAAa,CAACC,SAAS,IAAIN,CAAC,CAACC,OAAO,CAACD,CAAC,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU;IACzF,CAAC;IAED,IAAI,CAACX,iBAAiB,CAACe,OAAO,GAAIP,CAAK,IAAI;MACvCV,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAES,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI,CAACR,iBAAiB,CAACgB,KAAK,GAAIR,CAAK,IAAI;MACrCV,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAES,CAAC,CAAC;MACxB,IAAI,CAACF,gBAAgB,EAAE;IAC3B,CAAC;IAED,IAAI,CAACN,iBAAiB,CAACiB,SAAS,GAAIT,CAAK,IAAI;MACzCV,OAAO,CAACC,GAAG,CAAC,WAAW,EAAES,CAAC,CAAC;IAC/B,CAAC;EACL;EAEAF,gBAAgB;IACZ,IAAI,CAACN,iBAAiB,CAACkB,KAAK,EAAE;EAClC;EAEAC,eAAe;IACX,IAAI,CAACnB,iBAAiB,CAACoB,IAAI,EAAE;EACjC;;AA3DSzB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA0B;EAAAC;IAAA;;;;;;;;;;;;;MCVzBC,0BAAI;MAAAA,0EAA4B;MAAAA,iBAAK;MAErCA,kCAAY;MAAAA,0BAAU;MAAAA,iBAAI","names":["AppComponent","constructor","window","console","log","speechRecognition","webkitSpeechRecognition","initSpeech","SpeechRecognition","lang","continuous","startRecognition","onresult","e","results","length","transcript","textBox","nativeElement","innerHTML","onerror","onend","onnomatch","start","stopRecognition","stop","selectors","viewQuery","i0"],"sourceRoot":"","sources":["C:\\Users\\Michael Cote\\Desktop\\Notepad-Talk\\notepad\\src\\app\\app.component.ts","C:\\Users\\Michael Cote\\Desktop\\Notepad-Talk\\notepad\\src\\app\\app.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\n\ndeclare var webkitSpeechRecognition: any;\ndeclare var SpeechRecognition: any;\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    public speechRecognition: any;\n    @ViewChild('textBox') textBox!: ElementRef<HTMLParagraphElement>;\n\n    constructor() {\n        // only webkit, firefox would be 'SpeechRecognition' in window, can fix later ... or not ... \n        if ('webkitSpeechRecognition' in window) {\n            console.log(\"webkit speech in window!\")\n\n            this.speechRecognition = new webkitSpeechRecognition();\n            this.initSpeech();\n\n        } else if('SpeechRecognition' in window) {\n            console.log(\"firefox speech in window!\")\n\n            this.speechRecognition = new SpeechRecognition();\n            this.initSpeech();\n        } else {\n            console.log(\"speech NOT in window...\")\n        }\n    }\n\n    initSpeech() {\n        console.log(\"init:\",this.speechRecognition)\n\n        this.speechRecognition.lang = 'en-US';\n        this.speechRecognition.continuous = true;\n\n        console.log(\"speech init:\",this.speechRecognition)\n\n        this.startRecognition();\n\n        // events \n        this.speechRecognition.onresult = (e:any) => {\n            console.log(\"results?\", e, e.results[e.results.length - 1][0].transcript)\n            this.textBox.nativeElement.innerHTML += e.results[e.results.length - 1][0].transcript;\n        };\n\n        this.speechRecognition.onerror = (e:any) => {\n            console.log(\"error?\", e)\n        };\n\n        this.speechRecognition.onend = (e:any) => {\n            console.log(\"ended?\", e)\n            this.startRecognition();\n        };\n\n        this.speechRecognition.onnomatch = (e:any) => {\n            console.log(\"no match?\", e)\n        };\n    }\n\n    startRecognition() {\n        this.speechRecognition.start();\n    }\n\n    stopRecognition() {\n        this.speechRecognition.stop();\n    }\n}\n","<h1>üó£Ô∏è Talk to Text Notepad üóíÔ∏è</h1>\n\n<p #textBox>New Note: </p>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}