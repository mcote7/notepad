{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AppComponent {\n  // @ViewChild('textBox') textBox!: ElementRef<HTMLParagraphElement>;\n  constructor() {\n    this.isRunning = false;\n    this.noteText = new BehaviorSubject(\"\");\n    if ('webkitSpeechRecognition' in window) {\n      console.log(\"webkit speech in window!\");\n      this.speechRecognition = new webkitSpeechRecognition();\n      this.initSpeech();\n    } else if ('SpeechRecognition' in window) {\n      console.log(\"firefox speech in window!\");\n      this.speechRecognition = new SpeechRecognition();\n      this.initSpeech();\n    } else {\n      console.log(\"speech NOT in window...\");\n    }\n  }\n  initSpeech() {\n    // console.log(\"init:\",this.speechRecognition)\n    this.speechRecognition.lang = 'en-US';\n    this.speechRecognition.continuous = true;\n    console.log(\"speech init:\", this.speechRecognition);\n    this.startRecognition();\n    // events \n    this.speechRecognition.onresult = e => {\n      console.log(\"results?\", e, e.results[e.results.length - 1][0].transcript);\n      // this.textBox.nativeElement.innerHTML += e.results[e.results.length - 1][0].transcript;\n      let newResult = this.noteText.getValue();\n      this.noteText.next(newResult += e.results[e.results.length - 1][0].transcript);\n    };\n    this.speechRecognition.onerror = e => {\n      console.log(\"error?\", e);\n    };\n    this.speechRecognition.onnomatch = e => {\n      console.log(\"no match?\", e);\n    };\n    this.speechRecognition.onend = e => {\n      console.log(\"ended?\", e);\n      this.startRecognition();\n    };\n  }\n  startRecognition() {\n    this.speechRecognition.start();\n    this.isRunning = true;\n  }\n  stopRecognition() {\n    this.speechRecognition.stop();\n    this.isRunning = false;\n  }\n}\nAppComponent.…µfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[\"textBox\", \"\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.…µ…µelementStart(0, \"h1\");\n      i0.…µ…µtext(1, \"\\uD83D\\uDDE3\\uFE0F Talk to Text Notepad \\uD83D\\uDDD2\\uFE0F\");\n      i0.…µ…µelementEnd();\n      i0.…µ…µelementStart(2, \"p\", null, 0);\n      i0.…µ…µtext(4);\n      i0.…µ…µelementEnd();\n    }\n    if (rf & 2) {\n      i0.…µ…µadvance(4);\n      i0.…µ…µtextInterpolate1(\"New Note: \", ctx.noteText, \" \");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAUtC,OAAM,MAAOC,YAAY;EAKrB;EAEAC;IAJO,cAAS,GAAY,KAAK;IAC1B,aAAQ,GAAG,IAAIF,eAAe,CAAS,EAAE,CAAC;IAI7C,IAAI,yBAAyB,IAAIG,MAAM,EAAE;MACrCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAEvC,IAAI,CAACC,iBAAiB,GAAG,IAAIC,uBAAuB,EAAE;MACtD,IAAI,CAACC,UAAU,EAAE;KAEpB,MAAM,IAAG,mBAAmB,IAAIL,MAAM,EAAE;MACrCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAExC,IAAI,CAACC,iBAAiB,GAAG,IAAIG,iBAAiB,EAAE;MAChD,IAAI,CAACD,UAAU,EAAE;KAEpB,MAAM;MACHJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;;EAE9C;EAEAG,UAAU;IACN;IAEA,IAAI,CAACF,iBAAiB,CAACI,IAAI,GAAG,OAAO;IACrC,IAAI,CAACJ,iBAAiB,CAACK,UAAU,GAAG,IAAI;IAExCP,OAAO,CAACC,GAAG,CAAC,cAAc,EAAC,IAAI,CAACC,iBAAiB,CAAC;IAElD,IAAI,CAACM,gBAAgB,EAAE;IAEvB;IACA,IAAI,CAACN,iBAAiB,CAACO,QAAQ,GAAIC,CAAK,IAAI;MACxCV,OAAO,CAACC,GAAG,CAAC,UAAU,EAAES,CAAC,EAAEA,CAAC,CAACC,OAAO,CAACD,CAAC,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC;MACzE;MACA,IAAIC,SAAS,GAAG,IAAI,CAACC,QAAQ,CAACC,QAAQ,EAAE;MACxC,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACH,SAAS,IAAIJ,CAAC,CAACC,OAAO,CAACD,CAAC,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC;IAClF,CAAC;IAED,IAAI,CAACX,iBAAiB,CAACgB,OAAO,GAAIR,CAAK,IAAI;MACvCV,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAES,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI,CAACR,iBAAiB,CAACiB,SAAS,GAAIT,CAAK,IAAI;MACzCV,OAAO,CAACC,GAAG,CAAC,WAAW,EAAES,CAAC,CAAC;IAC/B,CAAC;IAED,IAAI,CAACR,iBAAiB,CAACkB,KAAK,GAAIV,CAAK,IAAI;MACrCV,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAES,CAAC,CAAC;MACxB,IAAI,CAACF,gBAAgB,EAAE;IAC3B,CAAC;EACL;EAEAA,gBAAgB;IACZ,IAAI,CAACN,iBAAiB,CAACmB,KAAK,EAAE;IAC9B,IAAI,CAACC,SAAS,GAAG,IAAI;EACzB;EAEAC,eAAe;IACX,IAAI,CAACrB,iBAAiB,CAACsB,IAAI,EAAE;IAC7B,IAAI,CAACF,SAAS,GAAG,KAAK;EAC1B;;AAjESzB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXzBC,0BAAI;MAAAA,0EAA4B;MAAAA,iBAAK;MAErCA,kCAAY;MAAAA,YAAyB;MAAAA,iBAAI;;;MAA7BA,eAAyB;MAAzBA,sDAAyB","names":["BehaviorSubject","AppComponent","constructor","window","console","log","speechRecognition","webkitSpeechRecognition","initSpeech","SpeechRecognition","lang","continuous","startRecognition","onresult","e","results","length","transcript","newResult","noteText","getValue","next","onerror","onnomatch","onend","start","isRunning","stopRecognition","stop","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Michael Cote\\Desktop\\Notepad-Talk\\notepad\\src\\app\\app.component.ts","C:\\Users\\Michael Cote\\Desktop\\Notepad-Talk\\notepad\\src\\app\\app.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ndeclare var webkitSpeechRecognition: any;\ndeclare var SpeechRecognition: any;\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    private speechRecognition: any;\n    public isRunning: boolean = false;\n    public noteText = new BehaviorSubject<string>(\"\");\n    // @ViewChild('textBox') textBox!: ElementRef<HTMLParagraphElement>;\n\n    constructor() {\n        if ('webkitSpeechRecognition' in window) {\n            console.log(\"webkit speech in window!\")\n\n            this.speechRecognition = new webkitSpeechRecognition();\n            this.initSpeech();\n\n        } else if('SpeechRecognition' in window) {\n            console.log(\"firefox speech in window!\")\n\n            this.speechRecognition = new SpeechRecognition();\n            this.initSpeech();\n\n        } else {\n            console.log(\"speech NOT in window...\")\n        }\n    }\n\n    initSpeech() {\n        // console.log(\"init:\",this.speechRecognition)\n\n        this.speechRecognition.lang = 'en-US';\n        this.speechRecognition.continuous = true;\n\n        console.log(\"speech init:\",this.speechRecognition)\n\n        this.startRecognition();\n\n        // events \n        this.speechRecognition.onresult = (e:any) => {\n            console.log(\"results?\", e, e.results[e.results.length - 1][0].transcript)\n            // this.textBox.nativeElement.innerHTML += e.results[e.results.length - 1][0].transcript;\n            let newResult = this.noteText.getValue();\n            this.noteText.next(newResult += e.results[e.results.length - 1][0].transcript)\n        };\n\n        this.speechRecognition.onerror = (e:any) => {\n            console.log(\"error?\", e)\n        };\n\n        this.speechRecognition.onnomatch = (e:any) => {\n            console.log(\"no match?\", e)\n        };\n\n        this.speechRecognition.onend = (e:any) => {\n            console.log(\"ended?\", e)\n            this.startRecognition();\n        };\n    }\n\n    startRecognition() {\n        this.speechRecognition.start();\n        this.isRunning = true;\n    }\n\n    stopRecognition() {\n        this.speechRecognition.stop();\n        this.isRunning = false;\n    }\n}\n","<h1>üó£Ô∏è Talk to Text Notepad üóíÔ∏è</h1>\n\n<p #textBox>New Note: {{ noteText }} </p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}