{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"textBox\"];\nfunction AppComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_8_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.downloadNote());\n    });\n    i0.ɵɵtext(2, \" download note \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_8_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.storeLocal());\n    });\n    i0.ɵɵtext(4, \" store local \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_8_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.storeIndexDb());\n    });\n    i0.ɵɵtext(6, \" store indexDb \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_8_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.clearText());\n    });\n    i0.ɵɵtext(8, \" clear text \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isDownloading);\n  }\n}\nfunction AppComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const note_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", note_r8.id, \"\\u00A0\\u2022\\u00A0\", i0.ɵɵpipeBind2(4, 3, note_r8.created, \"MMMM d y h:mm a\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(note_r8.content);\n  }\n}\n;\nexport class AppComponent {\n  constructor() {\n    this.isRunning = false;\n    this.isDownloading = false;\n    this.localStore = window.localStorage;\n    this.storedNotes = [];\n    if ('webkitSpeechRecognition' in window) {\n      console.log(\"webkit speech in window!\");\n      this.speechRecognition = new webkitSpeechRecognition();\n      this.initSpeech();\n    } else if ('SpeechRecognition' in window) {\n      console.log(\"firefox speech in window!\");\n      this.speechRecognition = new SpeechRecognition();\n      this.initSpeech();\n    } else {\n      console.log(\"speech NOT in window...\");\n    }\n    // events \n    this.speechRecognition.onresult = e => {\n      console.log(\"results?\", e, e.results[e.results.length - 1][0].transcript);\n      this.textBox.nativeElement.innerHTML += e.results[e.results.length - 1][0].transcript;\n    };\n    this.speechRecognition.onerror = e => {\n      console.log(\"error?\", e);\n    };\n    this.speechRecognition.onnomatch = e => {\n      console.log(\"no match?\", e);\n    };\n    this.speechRecognition.onend = e => {\n      console.log(\"ended?\", e);\n      if (this.isRunning) {\n        this.startRecognition();\n      }\n    };\n    // console.log(\"stored notes: \", this.localStore)\n    this.getLocalNotes();\n  }\n  initSpeech() {\n    this.speechRecognition.lang = 'en-US';\n    this.speechRecognition.continuous = true;\n    console.log(\"speech init:\", this.speechRecognition);\n    this.startRecognition();\n  }\n  startRecognition() {\n    this.speechRecognition.start();\n    this.isRunning = true;\n  }\n  stopRecognition() {\n    this.speechRecognition.stop();\n    this.isRunning = false;\n  }\n  downloadNote() {\n    this.isDownloading = true;\n    const text = this.textBox.nativeElement.innerHTML;\n    const fileName = \"note.txt\";\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', fileName);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    setTimeout(() => {\n      this.isDownloading = false;\n    });\n  }\n  clearText() {\n    this.textBox.nativeElement.innerHTML = \"\";\n  }\n  storeLocal() {\n    const id = this.localStore.length + 1;\n    const newNote = {\n      id,\n      created: new Date().toISOString(),\n      content: this.textBox.nativeElement.innerHTML\n    };\n    this.localStore.setItem(`note__${id}`, JSON.stringify(newNote));\n    // console.log(\"storing local\", this.localStore)\n    this.storedNotes.push(newNote);\n    this.clearText();\n  }\n  storeIndexDb() {\n    const newNote = {\n      id: 1,\n      created: new Date().toISOString(),\n      content: this.textBox.nativeElement.innerHTML\n    };\n    const request = window.indexedDB.open(\"MyTestDatabase\", 1);\n    request.onerror = event => {\n      // Do something with request.errorCode!\n      console.error(\"error indexDb\", event);\n    };\n    request.onsuccess = event => {\n      // Do something with request.result!\n      console.info(\"success indexDb\", event);\n      // const db = event.target?.result;\n    };\n  }\n\n  getLocalNotes() {\n    console.log(\"storage:\", this.localStore);\n    if (this.localStore.length > 0) {\n      const notesArray = Object.values(this.localStore);\n      console.log(\"notes arr\", notesArray);\n      for (let note of notesArray) {\n        console.log(\"parsed note: \", JSON.parse(note));\n        this.storedNotes.push(JSON.parse(note));\n      }\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textBox = _t.first);\n    }\n  },\n  decls: 10,\n  vars: 3,\n  consts: [[\"textBox\", \"\"], [3, \"click\"], [4, \"ngIf\"], [\"class\", \"stored-notes\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"click\"], [1, \"stored-notes\"], [1, \"note\"], [1, \"content\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"\\uD83D\\uDDE3\\uFE0F Talk to Text Notepad \\uD83D\\uDDD2\\uFE0F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h4\");\n      i0.ɵɵtext(3, \"New Note: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"p\", null, 0);\n      i0.ɵɵelementStart(6, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_6_listener() {\n        return ctx.isRunning ? ctx.stopRecognition() : ctx.startRecognition();\n      });\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, AppComponent_ng_container_8_Template, 9, 1, \"ng-container\", 2);\n      i0.ɵɵtemplate(9, AppComponent_div_9_Template, 7, 6, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isRunning ? \"stop\" : \"start\", \"\\n\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isRunning);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.storedNotes);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.DatePipe],\n  styles: [\".note[_ngcontent-%COMP%] {\\n  margin-top: 1rem;\\n  padding: 0.5rem;\\n  background-color: rgb(245, 241, 206);\\n}\\n.note[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%] {\\n  margin-top: 0.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vTWljaGFlbCUyMENvdGUvRGVza3RvcC9Ob3RlcGFkLVRhbGsvbm90ZXBhZC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLG9DQUFBO0FDQUo7QURDSTtFQUNJLGtCQUFBO0FDQ1IiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLm5vdGUge1xyXG4gICAgbWFyZ2luLXRvcDogMXJlbTtcclxuICAgIHBhZGRpbmc6IDAuNXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDUsIDI0MSwgMjA2KTtcclxuICAgIC5jb250ZW50IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwLjVyZW07XHJcbiAgICB9XHJcbn1cclxuIiwiLm5vdGUge1xuICBtYXJnaW4tdG9wOiAxcmVtO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDUsIDI0MSwgMjA2KTtcbn1cbi5ub3RlIC5jb250ZW50IHtcbiAgbWFyZ2luLXRvcDogMC41cmVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","window","localStorage","console","log","speechRecognition","webkitSpeechRecognition","initSpeech","SpeechRecognition","onresult","e","results","length","transcript","textBox","nativeElement","innerHTML","onerror","onnomatch","onend","isRunning","startRecognition","getLocalNotes","lang","continuous","start","stopRecognition","stop","downloadNote","isDownloading","text","fileName","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","setTimeout","clearText","storeLocal","id","localStore","newNote","created","Date","toISOString","content","setItem","JSON","stringify","storedNotes","push","storeIndexDb","request","indexedDB","open","event","error","onsuccess","info","notesArray","Object","values","note","parse","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Michael Cote\\Desktop\\Notepad-Talk\\notepad\\src\\app\\app.component.html","C:\\Users\\Michael Cote\\Desktop\\Notepad-Talk\\notepad\\src\\app\\app.component.ts"],"sourcesContent":["<h1>🗣️ Talk to Text Notepad 🗒️</h1>\n\n<h4>New Note: </h4>\n<p #textBox></p>\n\n<button\n    (click)=\"isRunning ? stopRecognition() : startRecognition()\">\n    {{ isRunning ? 'stop':'start' }}\n</button>\n\n<ng-container *ngIf=\"!isRunning\">\n    <button \n        [disabled]=\"isDownloading\"\n        (click)=\"downloadNote()\">\n        download note\n    </button>\n    \n    <button \n        (click)=\"storeLocal()\">\n        store local\n    </button>\n\n    <button \n        (click)=\"storeIndexDb()\">\n        store indexDb\n    </button>\n    \n    <button \n        (click)=\"clearText()\">\n        clear text\n    </button>\n</ng-container>\n\n<div \n    *ngFor=\"let note of storedNotes\"\n    class=\"stored-notes\">\n    <div class=\"note\">\n        <div>{{note.id}}&nbsp;&bull;&nbsp;{{note.created|date: 'MMMM d y h:mm a'}}</div>\n        <div class=\"content\">{{note.content}}</div>\n    </div>\n</div>\n\n<!-- file reader ... -->\n","import { Component, ElementRef, ViewChild } from '@angular/core';\n\ndeclare var webkitSpeechRecognition: any;\ndeclare var SpeechRecognition: any;\n\ninterface Note {\n    id: number;\n    created: string;\n    content: string;\n};\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    private speechRecognition: any;\n    public isRunning: boolean = false;\n    @ViewChild('textBox') textBox!: ElementRef<HTMLParagraphElement>;\n    public isDownloading: boolean = false;\n    private localStore: Storage = window.localStorage;\n    public storedNotes: Array<Note> = [];\n\n    constructor() {\n        if ('webkitSpeechRecognition' in window) {\n            console.log(\"webkit speech in window!\")\n            this.speechRecognition = new webkitSpeechRecognition();\n            this.initSpeech();\n        } else if('SpeechRecognition' in window) {\n            console.log(\"firefox speech in window!\")\n            this.speechRecognition = new SpeechRecognition();\n            this.initSpeech();\n        } else {\n            console.log(\"speech NOT in window...\")\n        }\n        // events \n        this.speechRecognition.onresult = (e:any) => {\n            console.log(\"results?\", e, e.results[e.results.length - 1][0].transcript)\n            this.textBox.nativeElement.innerHTML += e.results[e.results.length - 1][0].transcript;\n        };\n        this.speechRecognition.onerror = (e:any) => {\n            console.log(\"error?\", e)\n        };\n        this.speechRecognition.onnomatch = (e:any) => {\n            console.log(\"no match?\", e)\n        };\n        this.speechRecognition.onend = (e:any) => {\n            console.log(\"ended?\", e)\n            if(this.isRunning) {\n                this.startRecognition();\n            }\n        };\n        // console.log(\"stored notes: \", this.localStore)\n        this.getLocalNotes();\n    }\n\n    initSpeech() {\n        this.speechRecognition.lang = 'en-US';\n        this.speechRecognition.continuous = true;\n        console.log(\"speech init:\",this.speechRecognition)\n        this.startRecognition();\n    }\n\n    startRecognition() {\n        this.speechRecognition.start();\n        this.isRunning = true;\n    }\n\n    stopRecognition() {\n        this.speechRecognition.stop();\n        this.isRunning = false;\n    }\n\n    downloadNote() {\n        this.isDownloading = true\n        const text:string = this.textBox.nativeElement.innerHTML;\n        const fileName:string = \"note.txt\";\n        const element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', fileName);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n        setTimeout(() => {this.isDownloading = false});\n    }\n\n    clearText() {\n        this.textBox.nativeElement.innerHTML = \"\";\n    }\n\n    storeLocal() {\n        const id: number = (this.localStore.length + 1);\n        const newNote: Note = {\n            id,\n            created: new Date().toISOString(),\n            content: this.textBox.nativeElement.innerHTML\n        };\n        this.localStore.setItem(`note__${id}`, JSON.stringify(newNote));\n        // console.log(\"storing local\", this.localStore)\n        this.storedNotes.push(newNote);\n        this.clearText();\n    }\n\n    storeIndexDb() {\n        const newNote: Note = {\n            id: 1,\n            created: new Date().toISOString(),\n            content: this.textBox.nativeElement.innerHTML\n        };\n        const request = window.indexedDB.open(\"MyTestDatabase\", 1);\n        request.onerror = (event) => {\n            // Do something with request.errorCode!\n            console.error(\"error indexDb\", event)\n        };\n        request.onsuccess = (event) => {\n            // Do something with request.result!\n            console.info(\"success indexDb\", event)\n            // const db = event.target?.result;\n        };\n    }\n\n    getLocalNotes() {\n        console.log(\"storage:\", this.localStore)\n        if(this.localStore.length > 0) {\n            const notesArray: Array<string> = Object.values(this.localStore);\n            console.log(\"notes arr\", notesArray)\n            for(let note of notesArray) {\n                console.log(\"parsed note: \", JSON.parse(note))\n                this.storedNotes.push(JSON.parse(note));\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}